#!/bin/bash

# Script to generate index.html for web based on environment

set -e

ENVIRONMENT_FILE="$1"
DOCUMENT="web/index.html"
DOCUMENT_TEMPLATE="web/index.html.template"
AASA="web/.well-known/apple-app-site-association"
AASA_TEMPLATE="web/.well-known/apple-app-site-association.template"
ASSETLINKS="web/.well-known/assetlinks.json"
ASSETLINKS_TEMPLATE="web/.well-known/assetlinks.json.template"

if [[ -z "$ENVIRONMENT_FILE" ]]; then
  echo "‚ùå Error: No environment file specified."
  echo "üìñ Usage: ./build-web.sh <environment.env>"
  exit 1
fi

if [[ ! -f "$ENVIRONMENT_FILE" ]]; then
  echo "‚ùå Environment file not found: $ENVIRONMENT_FILE"
  exit 1
fi

if [[ ! -f "$DOCUMENT_TEMPLATE" ]]; then
  echo "‚ùå Template file not found: $DOCUMENT_TEMPLATE"
  exit 1
fi

if [[ ! -f "$AASA_TEMPLATE" ]]; then
  echo "‚ùå Apple App Site Association template file not found: $AASA_TEMPLATE"
  exit 1
fi

if [[ ! -f "$ASSETLINKS_TEMPLATE" ]]; then
  echo "‚ùå Android App Links template file not found: $ASSETLINKS_TEMPLATE"
  exit 1
fi

echo "üîç Processing environment file for Web: $ENVIRONMENT_FILE"

cp "$DOCUMENT_TEMPLATE" "$DOCUMENT"
cp "$AASA_TEMPLATE" "$AASA"
cp "$ASSETLINKS_TEMPLATE" "$ASSETLINKS"

# ‰∏ÄÊôÇ„Éï„Ç°„Ç§„É´„Çí‰Ωø„Å£„Å¶Áí∞Â¢ÉÂ§âÊï∞„Çí‰øùÂ≠ò
temp_env_file=$(mktemp)
trap "rm -f $temp_env_file" EXIT

echo ""
echo "üîç Parsing environment variables..."

while IFS= read -r line; do
  echo "   Decoded entry: '$line'"

  trimmed_line=$(echo "$line" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
  if [[ -z "$trimmed_line" ]]; then
    echo "   ‚ö†Ô∏è Skipping empty line"
    continue
  fi

  if [[ "$trimmed_line" =~ ^[[:space:]]*# ]]; then
    echo "   üí¨ Skipping comment: '$trimmed_line'"
    continue
  fi

  # key=value ÂΩ¢Âºè„ÅÆÊ§úË®º
  if [[ ! "$trimmed_line" =~ ^[^=]+= ]]; then
    echo "   ‚ö†Ô∏è Skipping invalid entry (no '=' found): '$trimmed_line'"
    continue
  fi

  # key=value ÂΩ¢Âºè„ÅßÂàÜÂâ≤ÔºàÂÄ§„Å´=„ÅåÂê´„Åæ„Çå„ÇãÂ†¥Âêà„ÇÇËÄÉÊÖÆÔºâ
  key="${trimmed_line%%=*}"
  value="${trimmed_line#*=}"

  # key „ÅÆÂâçÂæå„Çπ„Éö„Éº„ÇπÈô§Âéª
  key=$(echo "$key" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')

  # Á©∫„ÅÆ key „Çí„Çπ„Ç≠„ÉÉ„Éó
  if [[ -z "$key" ]]; then
    echo "   ‚ö†Ô∏è Skipping entry with blank key: '$trimmed_line'"
    continue
  fi

  # key „Å´„Çπ„Éö„Éº„Çπ„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„Çí„Çπ„Ç≠„ÉÉ„Éó
  if [[ "$key" =~ [[:space:]] ]]; then
    echo "   ‚ö†Ô∏è Skipping entry with space in key: '$key'"
    continue
  fi

  # ÂÄ§„ÅÆÂâçÂæå„Çπ„Éö„Éº„ÇπÈô§Âéª
  value=$(echo "$value" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')

  # Flutter ÂÜÖÈÉ®Â§âÊï∞„Çí„Çπ„Ç≠„ÉÉ„Éó
  lowercase_key=$(echo "$key" | tr '[:upper:]' '[:lower:]')
  if [[ $lowercase_key == flutter* ]]; then
    echo "   üö´ Skipping Flutter internal variable: '$key'"
    continue
  fi

  # ÂÄ§„ÅÆ„ÇØ„Ç©„Éº„ÉàÈô§Âéª
  if [[ "$value" =~ ^\".*\"$ ]]; then
    value="${value:1:-1}"
  elif [[ "$value" =~ ^\'.*\'$ ]]; then
    value="${value:1:-1}"
  fi

  # ‰∏ÄÊôÇ„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠òÔºàÈÄ£ÊÉ≥ÈÖçÂàó„ÅÆ‰ª£ÊõøÔºâ
  echo "$key|$value" >> "$temp_env_file"
  echo "   ‚úÖ Parsed: '$key' = '$value'"
done < "$ENVIRONMENT_FILE"

echo ""
echo "üîÑ Applying environment variables to template..."

# ‰∏ÄÊôÇ„Éï„Ç°„Ç§„É´„Åã„ÇâË™≠„ÅøËæº„Çì„ÅßÁΩÆÊèõ
while IFS='|' read -r key value; do
  if [[ -n "$key" && -n "$value" ]]; then
    # „Ç®„Çπ„Ç±„Éº„ÉóÂá¶ÁêÜÔºàsed„ÅßÂÆâÂÖ®„Å´‰Ωø„Åà„Çã„Çà„ÅÜ„Å´Ôºâ
    escaped_value=$(printf '%s\n' "$value" | sed 's/[[\.*^$()+?{|]/\\&/g')

    # „ÉÜ„É≥„Éó„É¨„Éº„ÉàÂÜÖ„ÅÆ {{key}} „ÇíÂÄ§„ÅßÁΩÆÊèõ
    if sed -i.bak "s|{{$key}}|$escaped_value|g" "$DOCUMENT" 2>/dev/null; then
      rm -f "$DOCUMENT.bak"
    else
      sed -i "s|{{$key}}|$escaped_value|g" "$DOCUMENT"
    fi

    if sed -i.bak "s|{{$key}}|$escaped_value|g" "$AASA" 2>/dev/null; then
      rm -f "$AASA.bak"
    else
      sed -i "s|{{$key}}|$escaped_value|g" "$AASA"
    fi

    if sed -i.bak "s|{{$key}}|$escaped_value|g" "$ASSETLINKS" 2>/dev/null; then
      rm -f "$ASSETLINKS.bak"
    else
      sed -i "s|{{$key}}|$escaped_value|g" "$ASSETLINKS"
    fi

    echo "   üîÑ Replaced {{$key}}"
  fi
done < "$temp_env_file"

echo ""
echo "‚úÖ Web build completed successfully!"
echo "üéØ Generated file: $DOCUMENT"
echo "üéØ Generated file: $AASA"
echo "üéØ Generated file: $ASSETLINKS"
echo ""
echo "üí° Tip: You can now run 'flutter run -d chrome' to start your web app."